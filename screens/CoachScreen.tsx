import React, { useState } from 'react';
import { View, Text, TextInput, TouchableOpacity, StyleSheet, ScrollView, Alert } from 'react-native';
import { db } from '../config/firebaseConfig';
import { collection, addDoc } from 'firebase/firestore';

// ุงูุนุถูุงุช ูุชูุงุฑูููุง
const musclesData: Record<string, string[]> = {
  ุตุฏุฑ: ['ุจูุด ูุณุชูู', 'ุจูุด ูุงุฆู', 'ุจูุด ููููุจ', 'ุชูุชูุญ ูุณุชูู', 'ุชูุชูุญ ูุงุฆู', 'ูุงุจู ุนุงูู', 'ูุงุจู ููุฎูุถ', 'ุฏูุจู ูุณุชูู', 'ุฏูุจู ูุงุฆู', 'ุจูุด ุขูุฉ', 'ุถุบุท ุฃุฑุถู', 'ุบุทุณ', 'ุจูุด ุฃุจ', 'ุจูุด ุณููุซ', 'ุชูุชูุญ ุณููุซ', 'ุณุญุจ ุนููู', 'ุถุบุท ููุจุถ', 'ุจูุด ูุงุณุน', 'ุจูุด ุถูู', 'ุจูุด ุชููู'],
  ุธูุฑ: ['ุณุญุจ ุฃูุงูู', 'ุณุญุจ ุฎููู', 'ุจุงุฑ ุฃุฑุถู', 'ุฏุงูุจู ูุฑุฏู', 'ุฏุงูุจู ูุฒุฏูุฌ', 'ุชู ุจุงุฑ', 'ุจูููุฑ', 'ูุงููุจูู', 'ุณุญุจ ุนููู ูุงุณุน', 'ุณุญุจ ุณููู', 'ุณุญุจ ุถูู', 'ุณุญุจ ุฌุงูุจู', 'ุฑูุฑูุฉ ุธูุฑ', 'ุขูุฉ ุธูุฑ', 'ุฑูุฑูุฉ ุณููุซ', 'ูุงู ุธูุฑ', 'ุฑูุน ุชุฑุงุจูุณ', 'ูุงุจู ุธูุฑ', 'ุฏูุจู ุธูุฑ', 'ุจูู ุฃุจ'],
  ุฃุฑุฌู: ['ุณููุงุช', 'ุณููุงุช ุฃูุงูู', 'ุจุฑูุณ ุฃุฑุฌู', 'ูุงูุฌุฒ', 'ุฑูุฑูุฉ ุฃูุงููุฉ', 'ุฑูุฑูุฉ ุฎูููุฉ', 'ุฑูุฑูุฉ ุฌุงูุจูุฉ', 'ุณูุงูุฉ ูุงูู', 'ุณูุงูุฉ ุฌุงูุณ', 'ุณูุงูุฉ ุขูุฉ', 'ูุดูุฉ ูุงูุฌุฒ', 'ุฏูุจู ุฃุฑุฌู', 'ุจุงุฑ ุฃุฑุฌู', 'ูุงุจู ุฃุฑุฌู', 'ุถุบุท ุฃุฑุฌู', 'ุณููุซ ุณููุงุช', 'ุฑูุฑูุฉ ุฏูุจู', 'ุฑูุน ุณูุงูุฉ', 'ุฌุณุฑ ุฃุฑุฏุงู', 'ุณุชูู ุฏูุฏููุช'],
  ุฃูุชุงู: ['ุถุบุท ุฃูุงูู', 'ุถุบุท ุฎููู', 'ุฑูุฑูุฉ ุฌุงูุจูุฉ', 'ุฑูุฑูุฉ ุฃูุงููุฉ', 'ุฑูุฑูุฉ ุฎูููุฉ', 'ุจุงุฑ ุฃูุงูู', 'ุจุงุฑ ุฎููู', 'ุฏูุจู ุฌุงูุจู', 'ุฏูุจู ุฎููู', 'ุฏูุจู ุฃูุงูู', 'ูุงุจู ุฌุงูุจู', 'ูุงุจู ุฎููู', 'ูุงุจู ุฃูุงูู', 'ุขูุฉ ุฃูุชุงู', 'ุณููุซ ุฃูุชุงู', 'ุณุญุจ ุฏูุจู', 'ุณุญุจ ุจุงุฑ', 'ูุฑูุณ ุฃูุชุงู', 'ุถุบุท ุฃุฑูููุฏ', 'ุดุฑุงูุญ ุฃูุงููุฉ'],
  ุจุงูุณุจุณ: ['ุจุงุฑ ูุณุชููู', 'ุจุงุฑ Z', 'ุฏูุจู ุจุงูุชุจุงุฏู', 'ุฏูุจู ูุนููุณ', 'ูุงุจู ุจุงูุณุจุณ', 'ุฌูุงุฒ ุจุงูุณุจุณ', 'ุชุฑููุฒ ุจุงูุณุจุณ', 'ูุฑูุณ ุจุงูุณุจุณ', 'ุจุงุฑ ุนูู ููุนุฏ', 'ุณููุซ ุจุงูุณุจุณ', 'ููุฑ', 'ุจุงุฑ ููุชูุญ', 'ุฏูุจู ุฏูุฑุงู', 'ุณุญุจ ุนูุณู', 'ุจุงูุณุจุณ ูุฒุฏูุฌ', 'ุฏูุจู ุนูู ููุนุฏ', 'ุจุงุฑ ุฎููู', 'ุจุงุฑ ุซููู', 'ุฑูุฑูุฉ ุจุงูุณุจุณ', 'ุขูุฉ ุจุงูุณุจุณ'],
  ุชุฑุงูุณุจุณ: ['ุจุงุฑ ุถูู', 'ุฏูุจู ุฎูู ุงูุฑุฃุณ', 'ูุงุจู ุณููู', 'ูุงุจู ุนููู', 'ูุฑูุณ ุชุฑุงู', 'ุฌูุงุฒ ุชุฑุงูุณุจุณ', 'ุบุทุณ ุชุฑุงูุณุจุณ', 'ุจูุด ุฃุจ ุถูู', 'ุณููุซ ุชุฑุงูุณุจุณ', 'ุฑูุฑูุฉ ุชุฑุงูุณุจุณ', 'ูุทุฑูุฉ ุชุฑุงู', 'ูุงุจู ุนูุณู', 'ุฏูุจู ุชูุฏูุฏ', 'ูุงุจู ูุฒุฏูุฌ', 'ุจุงุฑ ูุนููุณ', 'ุถุบุท ุฎููู', 'ุจุงุฑ ุชุฑุงู', 'ุฏูุจู ุชุฑุงู ูุงูู', 'ุขูุฉ ุชุฑุงู', 'ูุงูุฑ ุชุฑุงู'],
  ูุนุฏุฉ: ['ููุฑูุด ุนุงุฏู', 'ููุฑูุด ูุน ุฏูุฑุงู', 'ุฑูุน ุฃุฑุฌู', 'ุจูุงูู', 'ุจูุงูู ุฌุงูุจู', 'ุนุฌูุฉ ูุนุฏุฉ', 'ูุงุจู ูุนุฏุฉ', 'ุฌูุงุฒ ูุนุฏุฉ', 'ุจุงุฑ ูุนุฏุฉ', 'ุณููุงุช ูุนุฏุฉ', 'ุฌุณุฑ ูุนุฏุฉ', 'ุฑูุน ุฃุฑุฌู ูุนูู', 'ุจูุงูู ุทููู', 'ุชูุฏุฏ ูุนุฏุฉ', 'ููุฑูุด ุณููุซ', 'ุถุบุท ูุนุฏุฉ', 'ูุฑูุณ ูุนุฏุฉ', 'ุงูุญูุงุก ูุนุฏุฉ', 'ุฑูุฑูุฉ ูุนุฏุฉ', 'ููุฑูุด ุจุงููุงุจู']
};

export default function CoachScreen() {
  const [playerName, setPlayerName] = useState('');
  const [split, setSplit] = useState('');
  const [startDate, setStartDate] = useState('');
  const [endDate, setEndDate] = useState('');
  const [selectedExercises, setSelectedExercises] = useState<Record<string, string[]>>({});

  const toggleExercise = (muscle: string, exercise: string) => {
    setSelectedExercises(prev => {
      const current = prev[muscle] || [];
      return {
        ...prev,
        [muscle]: current.includes(exercise)
          ? current.filter(e => e !== exercise)
          : [...current, exercise],
      };
    });
  };

  const handleSave = async () => {
    if (!playerName || !split || !startDate || !endDate) {
      Alert.alert('ุฎุทุฃ', 'ูุฑุฌู ุชุนุจุฆุฉ ุฌููุน ุงูุญููู');
      return;
    }

    const exercisesArray = Object.keys(selectedExercises).map(muscle => ({
      muscle,
      selected: selectedExercises[muscle],
    }));

    try {
      await addDoc(collection(db, 'workouts'), {
        playerName,
        split,
        startDate,
        endDate,
        exercises: exercisesArray,
      });
      Alert.alert('โ ุชู ุงูุญูุธ', 'ุชู ุญูุธ ุงูุชูุงุฑูู ุจูุฌุงุญ');
      setPlayerName('');
      setSplit('');
      setStartDate('');
      setEndDate('');
      setSelectedExercises({});
    } catch (e) {
      Alert.alert('โ ุฎุทุฃ', 'ูุดู ูู ุงูุญูุธ');
      console.error(e);
    }
  };

  return (
    <ScrollView style={styles.container}>
      <Text style={styles.title}>๐ ุฅุนุฏุงุฏ ุฎุทุฉ ุชูุฑูู</Text>

      <TextInput style={styles.input} placeholder="ุงุณู ุงููุงุนุจ" value={playerName} onChangeText={setPlayerName} />
      <TextInput style={styles.input} placeholder="ุงูุชูุณููุฉ (ูุซูุงู: Push/Pull/Legs)" value={split} onChangeText={setSplit} />
      <TextInput style={styles.input} placeholder="ุชุงุฑูุฎ ุงูุจุฏุงูุฉ" value={startDate} onChangeText={setStartDate} />
      <TextInput style={styles.input} placeholder="ุชุงุฑูุฎ ุงูููุงูุฉ" value={endDate} onChangeText={setEndDate} />

      {Object.keys(musclesData).map(muscle => (
        <View key={muscle} style={styles.section}>
          <Text style={styles.muscleTitle}>๐ช {muscle}</Text>
          <View style={styles.exerciseList}>
            {musclesData[muscle].map(ex => (
              <TouchableOpacity
                key={ex}
                style={[
                  styles.exerciseItem,
                  selectedExercises[muscle]?.includes(ex) && styles.selectedExercise
                ]}
                onPress={() => toggleExercise(muscle, ex)}
              >
                <Text style={styles.exerciseText}>{ex}</Text>
              </TouchableOpacity>
            ))}
          </View>
        </View>
      ))}

      <TouchableOpacity style={styles.button} onPress={handleSave}>
        <Text style={styles.buttonText}>๐พ ุญูุธ ุงูุฎุทุฉ</Text>
      </TouchableOpacity>
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  container: { flex: 1, backgroundColor: '#121212', padding: 16 },
  title: { fontSize: 22, color: '#fff', marginBottom: 12, textAlign: 'center' },
  input: {
    backgroundColor: '#fff',
    color: '#fff',
    padding: 12,
    borderRadius: 10,
    marginBottom: 10,
    
    
    
  },
  section: { marginBottom: 20 },
  muscleTitle: { color: '#4CAF50', fontSize: 18, marginBottom: 6 },
  exerciseList: { flexDirection: 'row', flexWrap: 'wrap' },
  exerciseItem: {
    backgroundColor: '#2e2e2e',
    padding: 8,
    borderRadius: 8,
    margin: 4,
  },
  selectedExercise: { backgroundColor: '#4CAF50' },
  exerciseText: { color: '#fff' },
  button: {
    backgroundColor: '#4CAF50',
    padding: 16,
    borderRadius: 10,
    alignItems: 'center',
    marginVertical: 16,
    
  },
  buttonText: { color: '#fff', fontSize: 18 },
});
